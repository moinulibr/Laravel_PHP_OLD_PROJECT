
	https://packagist.org/packages/dompdf/dompdf
	pdf 
	
	step:1..
	======
	 	in composer, have to command for download some file

	composer require barryvdh/laravel-dompdf
-------------------------------------------------------------------------------------------
	step:2
	=======>Config ->app.php file
	
		'providers'  => [
				Barryvdh\DomPDF\ServiceProvider::class,
				],


	and also add in alias
	
		'aliases'  => [
				'PDF'  => Barryvdh\DomPDF\Facade::class,
				],


--------------------------------------------------------------------------------------

	spet:3.
	======= 
	
		in blade file.. which want to show and create pdf file and download
	
	<a href="{{url()}}">Download PDF</a>
	
	<table>
		<tr>
		    <th>Name</th>
		</tr>
		<tr>
		   <td>Hasa </td>
		</tr>
	</table>


--------------------------------------------------------------------------------------
	in web.php file..
		Route::get('','');

-----------------------------------------------------------------------------------

	step:4
	=====
		Now in controller have to use some things.. by using facade..
	
	use PDF;
	
	//$pdf =  PDF::loadView('view.pageName');		[created to pdf file]

	
	$pdf =  PDF::loadView('view.pageName');
	return $pdf->download('pdfDownload_FileName.pdf');

	//$pdf =  PDF::loadView('view.pageName');  [$pdf is created pdf file.]
	//return $pdf->download('pdfDownload_FileName.pdf');  [creating downlaod, if don't want to download option, then not to do this ]
	
	*******
	setp:5:  create a folder in the storage Folder.. the created folder name will be, fonts...
			storage/fonts
	*******	

-----------------------------------------------------------------------------------
		oR
	
	$pdf = \App::make('dompdf.wrapper');
	$pdf->loadHTML(<h2></h2>);	[Html Code ,which want to convert to pdf file]
	return $pdf->stream();   [for show pdf file]

	-------------------------------------------------------
	we can set paper size and off error..
	
	PDF::loadHTML($html)->setPaper('a4','landscape')->setWarnings(false)->save('myfile.pdf');

	-------
	PDF::setOptions(['dpi'=>150, 'defaultFont' => 'sans-serif']);


	----------------
	page break; by css
	------------
		
		<style>
			.page-break{
				page-break-after:always;
				}
		</style>
	
		useage
		------
	<h2> page 1 </h2>
	<div class="page-break"></div> [after using this css .. page will be change automaticlly.. its used below of the page]
	<h2>page 2 </h2>
	

================================================================================================================================================
				12.01.2021
		=====-----======-----=====-----=======				

	if any problem.. then create a folder in ther storage folder.. folder name fonts
	mean.. fonts folder create in the storage folder 
		---------------------===========--------------------

	$data['somethings'] = [];

 	ini_set('max_execution_time', 180); //3 minutes
        $pdf =  PDF::loadView('backend.order.admin.order_assigned_manpower.list_print',$data);
        //$p = $pdf->stream();   //===  [this create a pdf file... we send this pdf file in the email... as attach file...]
        return $pdf->download('pdfDownload_FileName.pdf'); //====[download pdf]



        ini_set('max_execution_time', 180); //3 minutes
        $page =  view('backend.order.admin.order_assigned_manpower.list_print',$data);
        $pdf = \App::make('dompdf.wrapper');
        $pdf->loadHTML($page); // $pdf->loadHTML('<h2>'.Hello, Preint This Section.'</h2>');
        return $pdf->download('pdfDownload_FileName.pdf');
        return $pdf->stream();
	=====-----======-----=====-----=======	




=================================================================================================================================================






================================================================================================================================================
	print
	=====
	step:1		downlaod this js file for using js print . jquery printPage plugin
	======	http://www.position-absolute.com/creation/print/jquery.printPage.js

	step:2  in head section, have to add this type link...........
	======
	<head>
		<link rel="stylesheet" href="css/bootstrap.css"
		<script type="text/javascript" src="js/bootstrap.min.js"></script>
		<script type="text/javascript" src="js/jquery-2.2.4.min.js"></script>		
		<script type="text/javascript" src="js/jquery.printPage.js"></script>
	</head>


	
	-----------------------------------------------------------
	in the controller..

		nothing extra.
	--------------------------------------------------------------
	step:3
	======
	in the blade file.. where want to create print option

	<a href="{{ route('') }}" class="btnprn btn"> Print Preview </a>

	
	<script type="text/javascript">
		$(document).ready(function(){
			$('.btnprn').printPage();
		});
	</script>




=========================================================================================================================================

<a href="{{ route('') }}" class="btnPrint btn"> Print Preview </a>

  <!--------for Print option ---->
{{-- --<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script> --}}
<script src="http://www.position-absolute.com/creation/print/jquery.printPage.js "></script>
    <script type="text/javascript">
        $(document).ready(function(){
            $('.btnPrint').printPage();
        });
</script>
    <!--------for Print option ---->






================================================================================================================================================

	// reference the Dompdf namespace
	use Dompdf\Dompdf;

	// instantiate and use the dompdf class
	$dompdf = new Dompdf();
	$dompdf->loadHtml('hello world');

	// (Optional) Setup the paper size and orientation
	$dompdf->setPaper('A4', 'landscape');

	// Render the HTML as PDF
	$dompdf->render();

	// Output the generated PDF to Browser
	$dompdf->stream();





	use Dompdf\Dompdf;
	use Dompdf\Options;

	$options = new Options();
	$options->set('defaultFont', 'Courier');
	$dompdf = new Dompdf($options);





	or at run time

	use Dompdf\Dompdf;

	$dompdf = new Dompdf();
	$options = $dompdf->getOptions();
	$options->setDefaultFont('Courier');
	$dompdf->setOptions($options);
























        $cleaner = CleanerInfo::where('user_id', auth()->user()->id)->first();
        $imageLink = asset('storage/'.$cleaner->photo_id);

        return Storage::disk('public')->download($cleaner->photo_id);  // or

        return Storage::disk('images')->download('2568346.jpg');

