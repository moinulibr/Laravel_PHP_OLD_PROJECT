
 <label>Default Time Picker</label>
                                <div class="input-group m-b-15">
                                    
                                    <div class="bootstrap-timepicker"><input id="timepicker" type="text" class="form-control"/></div>
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                                </div><!-- input-group -->
                            
                                <label>24 Hour Mode Time Picker</label>
                                <div class="input-group m-b-15">
                                    
                                    <div class="bootstrap-timepicker"><input id="timepicker2" type="text" class="form-control"/></div>
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                                </div><!-- input-group -->
                          
                                <label>Specify a step for the minute field</label>
                                <div class="input-group m-b-15">
                                    
                                    <div class="bootstrap-timepicker"><input id="timepicker3" type="text" class="form-control"/></div>
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                                </div><!-- input-group -->
                            




   <!-- Plugins css-->
    <!---------for Date and Time picker--------------->
    <link href="{{ asset('admin/links/assets/timepicker/bootstrap-timepicker.min.css') }}" rel="stylesheet" />
    <link href="{{ asset('admin/links/assets/timepicker/bootstrap-datepicker.min.css') }}" rel="stylesheet" />
    <!---------for Date and Time picker--------------->



	autocomplete="off"



        <!---------for Date and Time picker--------------->
        <script src="{{ asset('admin/links/assets/timepicker/bootstrap-timepicker.min.js') }}"></script>
        <script src="{{ asset('admin/links/assets/timepicker/bootstrap-datepicker.js') }}"></script>
            <!---------for Date and Time picker--------------->
       
        <script>
          // Time Picker
                jQuery('#timepicker').timepicker({defaultTIme: false});
                jQuery('#timepicker2').timepicker({showMeridian: false});
                jQuery('#timepicker3').timepicker({minuteStep: 15});
    
                // Date Picker
                jQuery('#datepicker').datepicker();
                jQuery('#datepicker2').datepicker();
                jQuery('#datepicker-inline').datepicker();
                jQuery('#datepicker-multiple').datepicker({
                    numberOfMonths: 3,
                    showButtonPanel: true
                });
        </script>
    <!---------for Date and Time picker--------------->









===========================================================================================
	last month from todays (month) //[like... this is february month]
	 have to take january month...
	============================

	$month = date("F",strtotime('-1 months'));	// F == Full Month name, M == short like. Jan
	echo $month;




===============================================================================
	Date to date different
	======================

	$searchStarTDay = "2020-02-20";
        $searchEndTDay  = "2020-02-22";
	
	===============
       return date_diff(
            date_create($searchEndTDay),  
            date_create($searchStarTDay)
        )->format('%a');
        ============

	====or another way====
        function daysBetween($dt1, $dt2) {
            return date_diff(
                date_create($dt2),  
                date_create($dt1)
            )->format('%a');
        }
        return daysBetween($searchStarTDay,$searchEndTDay);
	====or another way====


	==============================================
        $days = (strtotime($searchEndTDay) - strtotime($searchStarTDay)) / (60 * 60 * 24);
        return $days;
===========================================================================
	$start  = date_create('1988-08-10');
$end    = date_create(); // Current time and date
$diff   = date_diff( $start, $end );

echo 'The difference is ';
echo  $diff->y . ' years, ';
echo  $diff->m . ' months, ';
echo  $diff->d . ' days, ';
echo  $diff->h . ' hours, ';
echo  $diff->i . ' minutes, ';
echo  $diff->s . ' seconds';
// Output: The difference is 28 years, 5 months, 19 days, 20 hours, 34 minutes, 36 seconds

echo 'The difference in days : ' . $diff->days;
// Output: The difference in days : 10398


//////////////////////////////////////////////////////////////////////////////////
	//25-09-2021
 	if($request->ajax())
        {
            $pagination     = $request->pagination ?? 50;
            $search         = $request->search ?? NULL;
            $date_from = Carbon::parse($request->input('start_date'));
            $date_to = Carbon::parse($request->input('end_date') ?? date("Y-m-d h:i:s",strtotime(date("Y-m-d h:i:s")."-7 day")));
            
            $data['orders'] = Order::withCount('ebaskatMerchantPackages')
                ->when($search && ($date_from  == NULL),function($q)use($search){
                    return $q->where('order_number','like','%'.$search.'%')
                    ->orWhere('customer_email','like','%'.$search.'%')
                    ;
                })
                ->when($date_from && ($search  == NULL),function($d)use($date_from,$date_to){
                    return $d->whereDate('created_at', '<=', $date_from)
                    ->whereDate('created_at', '>=', $date_to);
                })
                ->when($date_from && $search,function($dq)use($date_from,$date_to,$search){
                    return $dq
                    ->whereDate('created_at', '<=', $date_from)
                    ->whereDate('created_at', '>=', $date_to)
                    ->where('order_number','like','%'.$search.'%')
                    ->orWhere('customer_email','like','%'.$search.'%')
                    ;
                })
                /* 
                    ->when($date_from || $search,function($ds)use($date_from,$date_to,$search){
                        return 
                        $ds->when($date_from,function($dq)use($date_from,$date_to){
                            return $dq->whereDate('created_at', '<=', $date_from)
                            ->whereDate('created_at', '>=', $date_to);
                        })
                        ->when($search,function($q)use($search){
                            return $q->where('order_number','like','%'.$search.'%')
                            ->orWhere('alix_order_id','like','%'.$search.'%');
                        });
                    }) 
                */
                ->orderBy('id', 'desc')
                ->paginate($pagination); 
            $html = view('admin.order-ebaskat.ajax.order_list',$data)->render();
            return response([
                'status' => true,
                'data'  => $html
            ]);
        }
