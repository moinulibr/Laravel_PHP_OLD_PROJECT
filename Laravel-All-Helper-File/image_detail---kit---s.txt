
	image upload
	============
		
	composer require intervention/image  //[in the command line]
	_________________________________________

	if we upload in the public folder, then we can show it directly.. so easy ,..
	but every body can brows it from public folder... So we should make / ensure minimum
	security .... How is possible

	if we upload or store in the storage folder.. then everybody can not excess easily

	
	If we can create a shortcurt storage link in to the public folder..then its possible
	______________________________

	php artisan storage:link

	-----then we can see , created a storage shortcurt link or folder in the public folder	


	
========================_____========_____in the controller_____=============================
	
	use Illuminate\Support\Carbon;
	use Illuminate\Support\Facades\Storage;
	use Intervention\Image\Facades\Image;



            $slug = str_slug($request->name);
            $image = $request->file('photo');

            if(isset($image)){
                $ext = $image->getClientOriginalExtension();
                $rand = str_random(10);
                $date = Carbon::now()->toDateString();
                $image_name = $slug.'-'.$date.'-'.$rand .'.'.$ext;

                 //check Category file directy 
                 if(!Storage::disk('public')->exists('category')){
                    Storage::disk('public')->makeDirectory('category');
                 }
                 //resize image for upload
                 $imageSize = Image::make($image)->resize(1600,479)->save($ext);
                 //upload in the Storage folder..
                 Storage::disk('public')->put('category/'.$image_name,$imageSize);
                 

                 //check Category/slider file directy 
                 if(!Storage::disk('public')->exists('category/slider')){
                    Storage::disk('public')->makeDirectory('category/slider');
                 }
                 //resize image for upload
                 $imageSize = Image::make($image)->resize(500,333)->save($ext);
                 //upload in the Storage folder..
                 Storage::disk('public')->put('category/slider/'.$image_name,$imageSize);

            }else{
                $image_name ='default.png';
            }

	 $category = new Category();
            $category->name = $request->name;
            $category->description = $request->description;
            $category->slug = $slug;
            $category->photo = $image_name;
            $save = $category->save();
            if($save){
                $notification = array(
                    'messege' => 'Category Inserted Successfully!',
                    'alert-type' => 'success'
                );
                return redirect()->route('admin.category.index')->with($notification);
            }else{
                $notification = array(
                    'messege' => 'Category Not Inserted!',
                    'alert-type' => 'error'
                );
                return redirect()->back()->with($notification);
            }


=================================Image update=================================



 $slug = str_slug($request->name);
            $image = $request->file('photo');
            $category = Category::findOrFail($id);

            if(isset($image)){
                $ext = $image->getClientOriginalExtension();
                $rand = str_random(10);
                $date = Carbon::now()->toDateString();
                $image_name = $slug.'-'.$date.'-'.$rand .'.'.$ext;

                 //check Category file directy 
                 if(!Storage::disk('public')->exists('category')){
                    Storage::disk('public')->makeDirectory('category');
                 }

                //Old image check and Delete
                 if(Storage::disk('public')->exists('category/'.$category->photo)){
                    Storage::disk('public')->delete('category/'.$category->photo);
                 }

                 //resize image for upload
                 $imageSize = Image::make($image)->resize(1600,479)->save($ext);
                 //upload in the Storage folder..
                 Storage::disk('public')->put('category/'.$image_name,$imageSize);
                 
                 /*------------------Image Slider------------------- */

                 //check Category/slider file directy 
                 if(!Storage::disk('public')->exists('category/slider')){
                    Storage::disk('public')->makeDirectory('category/slider');
                 }

                  //Old image category/slider check and Delete
                  if(Storage::disk('public')->exists('category/slider/'.$category->photo)){
                    Storage::disk('public')->delete('category/slider/'.$category->photo);
                 }
                 //resize image for upload
                 $imageSize = Image::make($image)->resize(500,333)->save($ext);
                 //upload in the Storage folder..
                 Storage::disk('public')->put('category/slider/'.$image_name,$imageSize);

            }else{
                $image_name =$category->photo;
            }


            //$category = new Category();
            $category->name = $request->name;
            $category->description = $request->description;
            $category->slug = $slug;
            $category->photo = $image_name;
            $save = $category->save();
            if($save){
                $notification = array(
                    'messege' => 'Category Updated Successfully!',
                    'alert-type' => 'success'
                );
                return redirect()->route('admin.category.index')->with($notification);
            }else{
                $notification = array(
                    'messege' => 'Category Not Updated!',
                    'alert-type' => 'error'
                );
                return redirect()->back()->with($notification);
            }



========================Delete====================================

	$category = Category::findOrFail($id);
         //check Category file directy 
         if(!Storage::disk('public')->exists('category')){
            Storage::disk('public')->makeDirectory('category');
         }

        //Old image check and Delete
         if(Storage::disk('public')->exists('category/'.$category->photo)){
            Storage::disk('public')->delete('category/'.$category->photo);
         }

         /*------------------Image Slider------------------- */

         //check Category/slider file directy 
         if(!Storage::disk('public')->exists('category/slider')){
            Storage::disk('public')->makeDirectory('category/slider');
         }

          //Old image category/slider check and Delete
          if(Storage::disk('public')->exists('category/slider/'.$category->photo)){
            Storage::disk('public')->delete('category/slider/'.$category->photo);
         }
         $category->delete();






==================show=================

  @if(Storage::disk('public')->exists('category/slider/',$item->photo))
     <img src="{{ asset('storage/category/slider/'.$item->photo) }}" alt="" width="50" height="40">
   @endif






