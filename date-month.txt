         ===============================================================
	 $promo_offer_from   =  strtotime('2021-02-15 12:20');
         $promo_offer_to     =  strtotime('2021-02-20 12:20');
         $compareDate  = strtotime(date('Y-m-d h:i:s'));
         
         if($promo_offer_from <= $compareDate && $promo_offer_to >= $compareDate )
         {
           return "Yes , We can insert somethings here , in this time";
         }else{
           return "No , We can not insert anythings in this time, because";
         }

	===================================================================
	
	use Carbon\Carbon;

Laravel Get Last Month records
If you want to get or fetch previous month records in laravel. Use the below laravel eloquent query to get the last month records from the database table.

	Get Last Week Data in Laravel
	How to get last week data in laravel?
You can use the below laravel eloquent query to get the last week records from the database table.

	$previous_week = strtotime("-1 week +1 day");
 $start_week = strtotime("last sunday midnight",$previous_week);
 $end_week = strtotime("next saturday",$start_week);
 $start_week = date("Y-m-d",$start_week);
 $end_week = date("Y-m-d",$end_week);

 	User::whereBetween('created_at', [$start_week, $end_week])->get(['name','created_at']);

	THIS MONTH
whereMonth('payment_date', '=', Carbon::now()->month)


Laravel Get Last Month records
If you want to get or fetch previous month records in laravel. Use the below laravel eloquent query to get the last month records from the database table.

	User::whereMonth('created_at', '=', Carbon::now()->subMonth()->month)->get(['name','created_at']);



	Get Last 15 Days & 30 Days Records in Laravel
If You want to get the last 15 days and last 30 days records from the database in laravel. Use the below given laravel eloquent query:


	$last_15_days = User::where('created_at','>=',Carbon::now()->subdays(15))->get(['name','created_at']);
 	$last_30_days = User::where('created_at','>=',Carbon::now()->subdays(30))->get(['name','created_at']);


	Laravel Get Last Year Record
If You want to get the previous year records from the database in laravel. Use the below-given laravel eloquent query:
	
	User::whereYear('created_at', date('Y', strtotime('-1 year')))->get(['name','created_at']);


Fetch Month Wise Last Year Data
When you show last year data analytics in your laravel application. You can use the below laravel eloquent query to get previous year data month wise from the database table.

User::select(DB::raw("(COUNT(*)) as count"),DB::raw("MONTHNAME(created_at) as monthname"))
 ->whereYear('created_at', date('Y', strtotime('-1 year')))
 ->groupBy('monthname')
 ->get();









	
    use Carbon\Carbon; // You need to import Carbon
	Carbon::now()->toDateTimeString(); 

	carbon::now
    $current_time = Carbon::now()->toDayDateTimeString(); // Wed, May 17, 2017 10:42 PM
    $current_timestamp = Carbon::now()->timestamp; // Unix timestamp 1495062127
{{\Carbon\Carbon::parse($dateTime)->format('D, d M \'y, H:i')}}





https://stackoverflow.com/questions/2870295/increment-date-by-one-month
$time = strtotime("2010.12.11");
$final = date("Y-m-d", strtotime("+1 month", $time));
$occDate='2014-01-28';
 $forOdNextMonth= date('m', strtotime("+1 month", strtotime($occDate)));
strtotime("12-12-2012 +1 Year");


<?php

    $date = date('2020-05-31');
    $current = date("m",strtotime($date));
    $next = date("m",strtotime($date."+1 month"));
    if($current==$next-1){
        $needed = date('Y-m-d',strtotime($date." +1 month"));
    }else{
        $needed = date('Y-m-d', strtotime("last day of next month",strtotime($date)));
    }
    echo "Date after 1 month from 2020-05-31 would be : $needed";

?>




	/*
	|-----------------------------
	| I use This
	|----------------------------
	*/
	 $date = date('Y');
         $newDate = date("F", strtotime("+1 month", $date));
         date("F", strtotime("2 month of this year"));

	    $date = date('Y');
            $data['months'] = "[";
            $data['month_data'] = "[";
            $j = 1;
            for ($i = 0; $i <= 11; $i++) 
            {
                $data['months'] .= "'".date("F", strtotime("+$i month", $date)). "',";
        
                $data['month_data'] .= "'". Total_bill_payment_history::whereMonth('payment_date', $j)->whereYear('payment_date', date('Y', strtotime('-1 year')))->sum('paid_total') . "',";
                $j++;
            }
            $data['month_data'] .= "]"; 
            $data['months'] .= "]";  

	/*
	|-----------------------------
	| Old 
	|----------------------------
	*/
 	$data['months'] = "[";
                for ($i = 1; $i <= 12; $i++) {
                    $data['months'] .= "'". date("F", strtotime( date( 'Y-m-01' )." + $i months")) . "',";
                }
                $data['months'] .= "]";   
               
                //get month wise data
                $data['month_data'] = "[";
                for ($i = 11; $i >= 0; $i--) {
                    $month = date("Y-m", strtotime( date( 'Y-m-01' )." - $i months"));
                    $data['month_data'] .= "'". Total_bill_payment_history::where('payment_date', 'like', $month . "%")->whereYear('payment_date', date('Y', strtotime('-1 year')))->sum('paid_total') . "',";
                }
                $data['month_data'] .= "]";




	//25-09-2021
 	if($request->ajax())
        {
            $pagination     = $request->pagination ?? 50;
            $search         = $request->search ?? NULL;
            $date_from = Carbon::parse($request->input('start_date'));
            $date_to = Carbon::parse($request->input('end_date') ?? date("Y-m-d h:i:s",strtotime(date("Y-m-d h:i:s")."-7 day")));
            
            $data['orders'] = Order::withCount('ebaskatMerchantPackages')
                ->when($search && ($date_from  == NULL),function($q)use($search){
                    return $q->where('order_number','like','%'.$search.'%')
                    ->orWhere('customer_email','like','%'.$search.'%')
                    ;
                })
                ->when($date_from && ($search  == NULL),function($d)use($date_from,$date_to){
                    return $d->whereDate('created_at', '<=', $date_from)
                    ->whereDate('created_at', '>=', $date_to);
                })
                ->when($date_from && $search,function($dq)use($date_from,$date_to,$search){
                    return $dq
                    ->whereDate('created_at', '<=', $date_from)
                    ->whereDate('created_at', '>=', $date_to)
                    ->where('order_number','like','%'.$search.'%')
                    ->orWhere('customer_email','like','%'.$search.'%')
                    ;
                })
                /* 
                    ->when($date_from || $search,function($ds)use($date_from,$date_to,$search){
                        return 
                        $ds->when($date_from,function($dq)use($date_from,$date_to){
                            return $dq->whereDate('created_at', '<=', $date_from)
                            ->whereDate('created_at', '>=', $date_to);
                        })
                        ->when($search,function($q)use($search){
                            return $q->where('order_number','like','%'.$search.'%')
                            ->orWhere('alix_order_id','like','%'.$search.'%');
                        });
                    }) 
                */
                ->orderBy('id', 'desc')
                ->paginate($pagination); 
            $html = view('admin.order-ebaskat.ajax.order_list',$data)->render();
            return response([
                'status' => true,
                'data'  => $html
            ]);
        }







